// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt { tapping-term-ms = <150>; };

&lt { tapping-term-ms = <150>; };

/ {
    behaviors {
        tap_dance: tap_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <150>;
            bindings = <&kp SEMICOLON>, <&caps_word>;
        };

        modtapbalance: modtapbalance {
            compatible = "zmk,behavior-hold-tap";
            label = "MODTAPBALANCE";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <160>;
            flavor = "balanced";
        };

        layertapbalance: layertapbalance {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYERTAPBALANCE";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <160>;
            flavor = "balanced";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            bindings = <&kp ESCAPE>;
            key-positions = <12 13>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q                 &kp W  &kp E  &kp R                        &kp T                 &kp Y      &kp U                         &kp I      &kp O    &kp P
&kp A                 &kp S  &kp D  &modtapbalance LEFT_SHIFT F  &kp G                 &kp H      &modtapbalance RIGHT_SHIFT J  &kp K      &kp L    &tap_dance
&layertapbalance 3 Z  &kp X  &kp C  &kp V                        &kp B                 &kp N      &kp M                         &kp COMMA  &kp DOT  &layertapbalance 3 SLASH
                                    &lt 1 TAB                    &mt LCMD BACKSPACE    &kp SPACE  &lt 2 ENTER
            >;

            label = "ABC";
        };

        symbol_layer {
            bindings = <
&kp GRAVE        &kp TILDE      &kp BACKSLASH  &kp PIPE              &kp HOME                 &kp LESS_THAN     &kp GREATER_THAN   &kp END           &kp QUESTION       &kp COLON
&kp EXCLAMATION  &kp AT_SIGN    &kp HASH       &kp DOLLAR            &kp PERCENT              &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &kp UNDERSCORE    &kp MINUS          &kp PLUS
&kp CARET        &kp AMPERSAND  &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp EQUAL
                                               &none                 &none                    &kp SPACE         &kp ENTER
            >;

            label = "SYM";
        };

        number_layer {
            bindings = <
&none            &kp N7        &kp NUMBER_8  &kp NUMBER_9  &kp HOME             &none      &none      &none      &none      &none
&kp LC(LS(TAB))  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp LC(TAB)          &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &kp LG(LS(NUMBER_4))
&kp LC(H)        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp LC(L)            &kp LC(C)  &kp LC(D)  &kp LC(U)  &none      &kp LS(LG(LC(NUMBER_4)))
                                             &kp NUMBER_0  &kp LA(BACKSPACE)    &none      &none
            >;

            label = "NUM";
        };

        wm_layer {
            bindings = <
&none  &kp LA(NUMBER_7)  &kp LA(NUMBER_8)  &kp LA(NUMBER_9)  &none             &kp LA(Q)        &kp LA(W)     &kp LA(E)     &kp LA(R)  &none
&none  &kp LA(NUMBER_4)  &kp LA(NUMBER_5)  &kp LA(NUMBER_6)  &none             &kp LA(H)        &kp LA(J)     &kp LA(K)     &kp LA(L)  &none
&none  &kp LA(NUMBER_1)  &kp LA(NUMBER_2)  &kp LA(NUMBER_3)  &none             &bt BT_SEL 0     &bt BT_SEL 1  &bt BT_SEL 2  &none      &none
                                           &none             &kp LEFT_SHIFT    &kp RIGHT_SHIFT  &none
            >;

            label = "WM";
        };
    };
};
